<?php namespace App;

use Carbon\Carbon;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 * Class Event
 *
 * Events that end up on the calendar
 */
class Event extends Model
{

    use SoftDeletes;

    protected $dates = array(
        'start_time',
        'end_time',
        'open_time',
        'close_time'
    );
    
    public static $relationsData = array(
        'category' => array(self::BELONGS_TO, 'EventCategory'),
        'registrations' => array(self::HAS_MANY, 'EventRegistration', 'foreignKey' => 'event_id'),
        'guests' => array(self::HAS_MANY, 'GuestRegistration', 'foreignKey' => 'event_id'),
        'activities' => array(self::HAS_MANY, 'Activity'),
        'tags' => array(
            self::BELONGS_TO_MANY,
            'EventTag',
            'table' => 'events_assigned_tags',
            'pivotKeys' => array('tag_id', 'event_id')
        ),
        'creator' => array(
            self::BELONGS_TO,
            'User',
            'foreign_key' => 'creator_id'
        ),
    );

    protected $guarded = array('id');

    /**
     * Relationships
     */

    /**
     * Category that the event belongs to
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function category()
    {
        return $this->belongsTo('App\EventCategory');
    }

    /**
     * Event registrations
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function registrations()
    {
        return $this->hasMany('App\EventRegistration');
    }

    /**
     * Guest registrations
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function guests()
    {
        return $this->hasMany('App\GuestRegistration');
    }

    /**
     * Activity entries generated by event
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function activities()
    {
        return $this->hasMany('App\Activity');
    }

    /**
     * Tags assigned to event
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsToMany
     */
    public function tags()
    {
        return $this->belongsToMany('App\Tag', 'events_assigned_tags');
    }

    /**
     * Creator of the event
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function creator()
    {
        return $this->belongsTo('App\User', 'creator_id');
    }

    /**
     * Sets title of event
     * @param $title
     */
    public function setTitleAttribute($title)
    {
        $this->attributes['title'] = strip_tags($title);
    }

    /**
     * Sets location of event
     * @param $location_event
     */
    public function setEventLocationAttribute($event_location)
    {
        $this->attributes['event_location'] = strip_tags($event_location);
    }


    /**
     * Mutators
     */

    /**
     * Sets meeting location
     * @param $meeting_location
     */
    public function setMeetingLocationAttribute($meeting_location)
    {
        $this->attributes['meeting_location'] = strip_tags($meeting_location);
    }

    public function setStartTimeAttribute($value)
    {
        $this->attributes['start_time'] = Carbon::createFromFormat(Carbon::ISO8601, $value);
    }

    public function setEndTimeAttribute($value)
    {
        $this->attributes['end_time'] = Carbon::createFromFormat(Carbon::ISO8601, $value);
    }

    public function setOpenTimeAttribute($value)
    {
        $this->attributes['open_time'] = Carbon::createFromFormat(Carbon::ISO8601, $value);
    }

    public function setCloseTimeAttribute($value)
    {
        $this->attributes['close_time'] = Carbon::createFromFormat(Carbon::ISO8601, $value);
    }

}
